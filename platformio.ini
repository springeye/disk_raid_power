; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = esp32_s3_169_boards
build_cache_dir = ./.pio/caches
src_dir = main
; Shared options
[env]
build_flags =
;  -Os          ; 优化代码大小
;  -ffunction-sections -fdata-sections -Wl,--gc-sections
;  -Wl,--gc-sections   ; 去除未使用的函数和数据
  -fexceptions
;  -D LV_CONF_SKIP
  -D LV_CONF_INCLUDE_SIMPLE
  -D LV_LVGL_H_INCLUDE_SIMPLE
  -I main
;  -D LV_FONT_MONTSERRAT_10=1
;  -D LV_FONT_MONTSERRAT_12=1
;  -D LV_FONT_MONTSERRAT_14=1
;  -D LV_FONT_MONTSERRAT_20=1
;  -D LV_FONT_MONTSERRAT_44=1
;  -D LV_USE_QRCODE=1
; Enable LVGL demo, remove when working on your own project
;  -D LV_USE_DEMO_WIDGETS=0
  ; Add more defines below to overide lvgl:/src/lv_conf_simple.h
lib_deps =
  ; Use direct URL, because package registry is unstable
  lvgl@9.3
  mathertel/OneButton@^2.6.1
lib_archive = false


[env:esp32]
;platform = espressif32
platform = https://github.com/pioarduino/platform-espressif32/releases/download/stable/platform-espressif32.zip
platform_packages =
  platformio/framework-arduinoespressif32@https://github.com/espressif/arduino-esp32.git#3.1.1
; Use high performance libraries to improve the performance, and avoid esp32s3 RGB LCD screen drifting issue
  platformio/framework-arduinoespressif32-libs@https://dl.espressif.com/AE/esp-arduino-libs/esp32-3.1.1-h.zip
board_build.spiffs_include_dir = data
board_build.filesystem = littlefs
board = esp32-s3-devkitc-1
board_build.partitions = partition_150.csv
framework = arduino
;framework = espidf, arduino
lib_compat_mode = strict
build_flags =
  ${env.build_flags}
  -D LV_LOG_LEVEL=LV_LOG_LEVEL_NONE
  -DASYNC_TCP_SSL_ENABLED=0
  -DBQ40Z80_ADDR=0xB
  -DIP2366_ADDR=0x75
  -DSW6306V_ADDR=0x3c


; Add recursive dirs for hal headers search
  !python3 -c "import os; print(' '.join(['-I {}'.format(i[0].replace(os.sep, '/')) for i in os.walk('hal/esp32')]))"
lib_deps =
  ${env.lib_deps}
  moononournation/GFX Library for Arduino@^1.6.1
  ESP32Async/AsyncTCP
  ESP32Async/ESPAsyncWebServer
;board_build.flash_size = 4MB
;board_build.partitions_offset = 0x9000  ; 必须与分区表中的 nvs 偏移一致


lib_ignore = littlefs
build_src_filter =
  +<*>
  +<../hal/esp32>
  ; 移除 LVGL demo 目录
  +<../hal/esp32>

[env:esp32_s3_169_boards]
extends = env:esp32
monitor_speed = 115200
build_flags =
  ${env:esp32.build_flags}
  -DUSE_HWCDC
  -DESP32_S3_169
  -D USER_SETUP_LOADED=1
  -D ST7789_DRIVER=1
  -D TFT_WIDTH=240
  -D TFT_HEIGHT=280
  -D TFT_MISO=-1
  -D TFT_MOSI=7
  -D TFT_SCLK=6
  -D TFT_CS=5
  -D TFT_DC=4
  -D TFT_RST=8
  -D LOAD_GLCD=0
  -D TFT_BLK=15
  -D KEY_01=40

  -D SPI_FREQUENCY=27000000


[env:esp32_s3_430_boards]
extends = env:esp32
build_flags =
  ${env:esp32.build_flags}
  -DUSE_HWCDC
  -DESP32_S3_430

[env:esp32_D0WDQ6]
extends = env:esp32
board = esp32dev
monitor_speed = 115200
build_flags =
  ${env:esp32.build_flags}
  -DESP32_S3_169
  -D USER_SETUP_LOADED=1
  -D ST7789_DRIVER=1
  -D TFT_WIDTH=240
  -D TFT_HEIGHT=280
  -D TFT_MISO=-1
  -D TFT_MOSI=19
  -D TFT_SCLK=18
  -D TFT_CS=21
  -D TFT_DC=23
  -D TFT_RST=22
  -D TFT_BLK=5
  -D LOAD_GLCD=0
  -D KEY_01=34
  -D TEMP_PIN=37
  -D SPI_FREQUENCY=27000000
