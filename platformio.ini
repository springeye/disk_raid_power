; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = emulator_64bits

; Shared options
[env]
build_flags =
  ; Don't use lv_conf.h. Tweak params via platfom.ini.
  -D LV_CONF_SKIP
  -D LV_CONF_INCLUDE_SIMPLE
  -D LV_FONT_MONTSERRAT_10=1
  -D LV_FONT_MONTSERRAT_12=1
  -D LV_FONT_MONTSERRAT_14=1
  -D LV_FONT_MONTSERRAT_20=1
  -D LV_FONT_MONTSERRAT_44=1
  ; Enable LVGL demo, remove when working on your own project
  -D LV_USE_DEMO_WIDGETS=0
  ; Add more defines below to overide lvgl:/src/lv_conf_simple.h
lib_deps =
  ; Use direct URL, because package registry is unstable
  lvgl@9.3
  mathertel/OneButton@^2.6.1
  moononournation/GFX Library for Arduino@^1.6.1
lib_archive = false


[env:emulator_64bits]
platform = native@^1.1.3
extra_scripts = 
  pre:support/sdl2_paths.py ; Tries to find SDL2 include and lib paths on your system - specifically for MacOS w/ Homebrew
  post:support/sdl2_build_extra.py
build_flags =
  ${env.build_flags}
  ; -D LV_LOG_LEVEL=LV_LOG_LEVEL_INFO
  -D LV_LOG_PRINTF=1
  ; Add recursive dirs for hal headers search
  !python3 -c 'import os; print(" ".join(["-I {}".format(i[0].replace("\\","/")) for i in os.walk("hal/sdl2")]))'
  -lSDL2
  ; SDL drivers options
  -D LV_LVGL_H_INCLUDE_SIMPLE
  -D LV_DRV_NO_CONF
  -D LV_USE_SDL
  -D SDL_HOR_RES=240
  -D SDL_VER_RES=280
  -D SDL_ZOOM=1
  -D LV_SDL_INCLUDE_PATH="\"SDL2/SDL.h\""

  ; LVGL memory options, setup for the demo to run properly
  -D LV_MEM_CUSTOM=1
  -D LV_MEM_SIZE="(128U * 1024U)"
  
lib_deps =
  ${env.lib_deps}
build_src_filter =
  +<*>
  +<../hal/sdl2>
  ; 移除 LVGL demo 目录


[env:emulator_32bits]
extends = env:emulator_64bits
build_flags =
  ${env:emulator_64bits.build_flags}
  -m32
build_src_filter =
  +<*>
  +<../hal/sdl2>
  ; 移除 LVGL demo 目录


[env:esp32]
; The `espressif32` latest official version does not support Arduino v3.1.x, temporarily using a third-party version
; platform = espressif32
platform = https://github.com/pioarduino/platform-espressif32/releases/download/stable/platform-espressif32.zip
platform_packages =
  platformio/framework-arduinoespressif32@https://github.com/espressif/arduino-esp32.git#3.3.0
; Use high performance libraries to improve the performance, and avoid esp32s3 RGB LCD screen drifting issue
  platformio/framework-arduinoespressif32-libs@https://dl.espressif.com/AE/esp-arduino-libs/esp32-3.2.0-h.zip


board = esp32-s3-devkitc-1
board_build.partitions = partition_150.csv
framework = arduino
lib_compat_mode = strict
build_flags =
  ${env.build_flags}
  -D LV_LOG_LEVEL=LV_LOG_LEVEL_NONE
  -DCONFIG_BOOTLOADER_APP_ROLLBACK_ENABLE=1

; Add recursive dirs for hal headers search
  !python3 -c 'import os; print(" ".join(["-I {}".format(i[0].replace("\\","/")) for i in os.walk("hal/esp32")]))'
lib_deps =
  ${env.lib_deps}
  moononournation/GFX Library for Arduino@^1.6.1

lib_ignore = littlefs
build_src_filter =
  +<*>
  +<../hal/esp32>
  ; 移除 LVGL demo 目录
  +<../hal/esp32>

[env:esp32_s3_169_boards]
extends = env:esp32
build_flags =
  ${env:esp32.build_flags}
  -DUSE_HWCDC
  -DESP32_S3_169

[env:esp32_s3_430_boards]
extends = env:esp32
build_flags =
  ${env:esp32.build_flags}
  -DUSE_HWCDC
  -DESP32_S3_430

[env:esp32_D0WDQ6]
extends = env:esp32
board = esp32dev
build_flags =
  ${env:esp32.build_flags}
  -DESP32_S3_169
